#!/usr/bin/env bash

echo "--------> man <--------"

# The command's description
echo -e "\nDescription: \n\t The 'man' command is an interface to the on-line reference manuals.

         Basic usage involves inputting 'name' as a parameter. This refers to the name of the manual page, which is typically the name of a command,
         function, or file.  However, if name contains a slash (/) then man interprets it as a file specification, so that
         you can do man ./foo.5 or even man /cd/foo/bar.1.gz. If you specify 'section' as a parameter, man only looks in
         that section of the manual."

echo "--------------"
# The command's syntax
echo -e "Syntax: man  [-acdfFhkKtwW]  [--path]  [-m  system]  [-p string] [-C config_file] [-M pathlist] [-P pager]
\t[-B browser] [-H htmlpager] [-S section_list] [section] name ..."
echo -e "\n       -C  config_file
              Specify the configuration file to use; the default is /private/etc/man.conf.  (See man.conf(5).)

       -M  path
              Specify the list of directories to search for man pages.  Separate the directories with colons.  An empty list is  the  same  as
              not specifying -M at all.  See SEARCH PATH FOR MANUAL PAGES.

       -P  pager
              Specify  which  pager  to use.  This option overrides the MANPAGER environment variable, which in turn overrides the PAGER vari-
              able.  By default, man uses /usr/bin/less -is.

       -B     Specify which browser to use on HTML files.  This option overrides the  BROWSER  environment  variable.  By  default,  man  uses
              /usr/bin/less-is,

       -H     Specify  a  command  that renders HTML files as text.  This option overrides the HTMLPAGER environment variable. By default, man
              uses /bin/cat,

       -S  section_list
              List is a colon separated list of manual sections to search.  This option overrides the MANSECT environment variable.

       -a     By default, man will exit after displaying the first manual page it finds.  Using this option forces man to display all the man-
              ual pages that match name, not just the first.

       -c     Reformat the source man page, even when an up-to-date cat page exists.  This can be meaningful if the cat page was formatted for
              a screen with a different number of columns, or if the preformatted page is corrupted.

       -d     Don't actually display the man pages, but do print gobs of debugging information.

       -D     Both display and print debugging info.

       -f     Equivalent to whatis.

       -F or --preformat
              Format only - do not display.

       -h     Print a help message and exit.

       -k     Equivalent to apropos.

       -m  system
              Specify an alternate set of man pages to search based on the system name given.

       -p  string
              Specify  the  sequence  of preprocessors to run before nroff or troff.  Not all installations will have a
              full set of preprocessors.  Some of the preprocessors and the letters used to designate them are: eqn (e),
              grap (g), pic (p), tbl  (t),  vgrind  (v), refer (r).  This option overrides the MANROFFSEQ environment variable.

       -t     Use  /usr/bin/groff  -Tps  -mandoc  -c  to  format  the manual page, passing the output to stdout.  The default output format of
              /usr/bin/groff -Tps -mandoc -c is Postscript, refer to the manual page of /usr/bin/groff -Tps -mandoc -c for  ways  to  pick  an
              alternate format.

       -w or --path
              Don't actually display the man pages, but do print the location(s) of the files that would be  formatted  or  displayed.  If  no
              argument  is  given:  display (on stdout) the list of directories that is searched by man for man pages. If manpath is a link to
              man, then "manpath" is equivalent to "man --path".

       -W     Like -w, but print file names one per line, without additional information.  This is useful in shell commands like man -aW man |
              xargs ls -l"

echo "--------------"
# The command's usage
echo "Usage:"


exit 0
