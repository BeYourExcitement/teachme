#!/usr/bin/env bash

echo "--------> rm <--------"

# The command's description
echo -e "\nDescription: \n\tCommand attempts to remove files. It also removes directories only if you add the '-f' and '-r'.

\tIf the permissions of the file do not permit writing, and the standard input device is a terminal, the user is prompted (on
\tthe standard error output) for confirmation. The rm utility removes symbolic links, not the files referenced by the links.

\tACTIONS ARE PERMANENT, USE WITH CAUTION"

echo "--------------"
# The command's syntax
echo "Syntax: rm [-dfiPRrvW] file ..."
echo -e "\n     -d          Attempt to remove directories as well as other types of files.

     -f          Attempt to remove the files without prompting for confirmation, regardless of the file's permissions.
                 If the file does not exist, do not display a diagnostic message or modify the exit status to reflect
                 an error.  The -f option overrides any previous -i options.

     -i          Request confirmation before attempting to remove each file, regardless of the file's permissions, or
                 whether or not the standard input device is a terminal.  The -i option overrides any previous -f options.

     -P          Overwrite regular files before deleting them.  Files are overwritten three times, first with the byte
                 pattern 0xff, then 0x00, and then 0xff again, before they are deleted.

     -R          Attempt to remove the file hierarchy rooted in each file argument.  The -R option implies the -d option.
                 If the -i option is specified, the user is prompted for confirmation before each directory's contents are
                 processed (as well as before the attempt is made to remove the directory).  If the user does not
                 respond affirmatively, the file hierarchy rooted in that directory is skipped.

     -r          Equivalent to -R.

     -v          Be verbose when deleting files, showing them as they are removed.

     -W          Attempt to undelete the named files.  Currently, this option can only be used to recover files covered by whiteouts."


echo "--------------"
# The command's usage
echo "Usage:"


exit 0
