#!/usr/bin/env bash

echo "--------> mv <--------"

# The command's description
echo -e "\nDescription: \n     Move files and directories

     In its first form, the mv utility renames the file named by the source operand to the destination path named by the target operand.  This
     form is also assumed when the last operand does not name an already existing directory.

     In its second form, mv moves each file named by a source operand to a destination file in the existing directory named by the directory
     operand.  The destination path for each operand is the pathname produced by the concatenation of the last operand, a slash, and the final
     pathname component of the named file."

echo "--------------"
# The command's syntax
echo "Syntax: mv [-f | -i | -n] [-v] source target
        mv [-f | -i | -n] [-v] source ... directory"
echo -e "\n     -f      Do not prompt for confirmation before overwriting the destination path.  (The -f option overrides any previous -i or -n options.)

     -i      Cause 'mv' to write a prompt to standard error before moving a file that would overwrite an existing file.  If the response from
             the standard input begins with the character 'y' or 'Y', the move is attempted.  (The -i option overrides any previous -f or -n
             options.)

     -n      Do not overwrite an existing file.  (The -n option overrides any previous -f or -i options.)

     -v      Cause 'mv' to be verbose, showing files after they are moved.

     It is an error for either the source operand or the destination path to specify a directory unless both do.

     If the destination path does not have a mode which permits writing, 'mv' prompts the user for confirmation as specified for the -i option.

     As the rename(2) call does not work across file systems, 'mv' uses cp(1) and rm(1) to accomplish the move.  The effect is equivalent to:

           rm -f destination_path &&
           cp -pRP source_file destination &&
           rm -rf source_file"

echo "--------------"
# The command's usage
echo "Usage:"


exit 0
